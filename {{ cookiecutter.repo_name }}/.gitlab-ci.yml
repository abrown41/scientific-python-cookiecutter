image: python:{{ cookiecutter.minimum_supported_python_version }}

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

# Install package and dependencies
before_script:
  - apt update && apt upgrade -y
  - python3 -V               # Print out python version for debugging
  - python3 -m venv venv
  - source venv/bin/activate
  - python -m pip install .
  - python -m pip install -r requirements-dev.txt

stages:
  - tests
  - docs
  - deploy

pytest-and-coverage:
  stage: tests
  script:
    - coverage run -m pytest
    - coverage report -m
    - coverage xml
    # Patch against https://gitlab.com/gitlab-org/gitlab/-/issues/217664
    # Remove these two lines once GitLab is upgraded to 13+
    - sed -i "s=<source>.*{{ cookiecutter.package_dir_name }}</source>=<source>./{{ cookiecutter.package_dir_name }}</source>=g" coverage.xml
    - sed -i "s;filename=\";filename=\"{{ cookiecutter.package_dir_name }}/;g" coverage.xml
    - flake8
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  artifacts:
    reports:
      cobertura: coverage.xml
    expire_in: 1 week
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
    - if: '$CI_COMMIT_BRANCH' 

build-docs:
  stage: docs
  script:
    - make -C docs html
  artifacts:
    paths:
      - docs/build/html
    expire_in: 1 week

pages:
  stage: deploy
  before_script: []
  script:
    - mv docs/build/html public/
  dependencies:
    - build-docs
  artifacts:
    paths:
    - public/
    expire_in: 1 year
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
